name : Docker Container
on : push
jobs:
  Node-Container:
    name: Node Docker
    runs-on: ubuntu-latest
    container : 
     image: node:16-alpine3.11
    steps:
      - name: Log Node Version
        run: |
         node -v
         cat /etc/os-release 
         
       
  GO_Lan-Container:
    name: GO Docker
    runs-on: ubuntu-latest
    container : 
     image: golang:1.15.13-alpine3.13
    steps:
      - name: Log Go Lang Version
        run: |
         go version
         cat /etc/os-release

  RUN_NODE_AAP_WITH_MONGO:  
    name: run app and mongodb service
    runs-on: ubuntu-latest
    services:
      app:
        image: balajidongare08/node-app
        ports:
         - 3001:3000
      mongo:
        image: mongo
        ports:
         - "27017:27017"
    steps:
      - name: Post a user
        run : 'curl -X POST http://localhost:3001/api/user
              -H ''Content-Type: application/json'' -d ''
              { "username":"Balaji", "address": "pune"}''' 
      - name: Get Users
        run :  curl http://localhost:3001/api/users        
  Docker_Steps:
    name: Docker steps
    runs-on: ubuntu-latest
    container: node:16-alpine3.11
    steps:
      - name : Log Node version
        run: node -v
      - name: Stesps With Docker
        uses: docker://node:16-alpine3.12
        with:
         entrypoint: '/bin/echo'
         args: "Hello Jhon" 
      - name: Log Node Version As entrypoint
        uses: docker://node:16-alpine3.12
        with:
         entrypoint: /usr/local/bin/node
         args: -v    

  Docker-With-Own-Scripts:
    name: Docker run Scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name : Run Scripts from docker
        uses: docker://node:16-alpine3.12
        with:
         entrypoint: ./script.sh
         args: "Jhon" 

  Send_Slack_Notification:
    name: Send Slack Notification
    runs-on: ubuntu-latest
    steps:
      - name : Send Slack Notification          #Send a slack notification 
        uses: docker://technosophos/slack-notify
        env:
         SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
         SLACK_MESSAGE: "Hello Balaji"     